---
export const prerender = true;

import Icon from "astro-iconify";
import type { StreamingData } from "../types/api";

interface Props {
  streaming: StreamingData;
  presence: any;
}

interface RenderedActivity {
  text: string;
  color: string;
  icon?: string;
  class?: string;
}

const { streaming, presence } = Astro.props;

function getStreamingActivity(streamingData: StreamingData): RenderedActivity {
  return {
    text: `Listening to ${streamingData.streaming!.track} by ${
      streamingData.streaming!.artist
    }`,
    icon: "tabler:disc",
    class: "animate-[spin_3s_linear_infinite]",
    color: "text-green-10",
  };
}

function getCodingActivity(presenceData: any): RenderedActivity {
  return {
    text: presenceData.coding.state
      ? presenceData.coding.state
      : presenceData.coding.details,
    icon: "tabler:brand-vscode",
    color: "text-blue-11",
  };
}

function getDefaultActivity(): RenderedActivity {
  return {
    text: "<3",
    color: "text-red-10",
  };
}

const renderedActivity: RenderedActivity = streaming.streaming
  ? getStreamingActivity(streaming)
  : presence.coding
  ? getCodingActivity(presence)
  : getDefaultActivity();
---

<span class={`${renderedActivity.color} flex items-center gap-1`}>
  {
    renderedActivity.icon && (
      <Icon
        name={renderedActivity.icon}
        size={20}
        class={renderedActivity.class}
      />
    )
  }
  {renderedActivity.text && <span class="">{renderedActivity.text}</span>}
</span>
